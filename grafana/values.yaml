
grafana:
  # --- PLUGINS (mantido) ---
  plugins:
    - grafana-athena-datasource

  # --- Sidecar para datasources (mantido) ---
  sidecar:
    datasources:
      enabled: true

  # --- Service Account IRSA (mantido) ---
  serviceAccount:
    create: true
    name: "grafana"
    annotations:
      eks.amazonaws.com/role-arn: "arn:aws:iam::920120425244:role/ilia-desafio-grafana-irsa-role"

  # --- Recursos (mantido) ---
  resources:
    limits:
      cpu: "1"
      memory: "1Gi"
    requests:
      cpu: "300m"
      memory: "300Mi"

  # --- Datasource do Athena (mantido) ---
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Athena
          type: grafana-athena-datasource
          access: proxy
          isDefault: true
          jsonData:
            authType: default
            defaultRegion: "us-east-1"
            catalog: "AwsDataCatalog"
            database: "ilia_desafio_db"
            workgroup: "ilia-desafio-workgroup"

  # ====== BLINDAGEM / ALTA DISPONIBILIDADE ======

  # 1) Tenha 2 réplicas e PDB => mantém pelo menos 1 pronto durante rollouts
  replicas: 2
  podDisruptionBudget:
    enabled: true
    minAvailable: 1

  # 2) Prioridade alta para não ser preemptado
  priorityClassName: "monitoring-critical"

  # 3) Evitar que as réplicas caiam no mesmo nó
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/name: grafana
          topologyKey: kubernetes.io/hostname

  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          app.kubernetes.io/name: grafana

  # 4) Rollout suave (zero indisponibilidade)
  deploymentStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
